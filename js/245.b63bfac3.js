"use strict";(self["webpackChunkariamin"]=self["webpackChunkariamin"]||[]).push([[245],{245:(e,t,a)=>{a.r(t),a.d(t,{default:()=>D});a(71),a(9544),a(2100);var r=a(5474),o=a(6237),n=a(5404),d=a(3001);const{methods:s,state:l}=d.Z;class c{constructor(e){this.medCart=e.map(((e,t)=>({index:t,genCode:e.genCode||e.DrugInfo.DrugCode,bulkId:l.grpIndex||e.bulkId||null,srvNN:e.srvNN||null,ordCount:l.ordCount||e.ordCount||parseFloat(e.TotalNumber),delCount:l.delCount||e.delCount||parseFloat(e.TotalNumber),remainCount:l.ordCount||e.remainCount||parseFloat(e.TotalNumber),deledInfo:e.deledInfo||[],name:e.name||e.DrugInfo.DrugName,dForm:e.dForm||e.DrugInfo.DrugForm,dose:e.dose||null,manuf:e.manuf||null,dirP:l.dirP||e.dirP||null,dirC:l.dirC||e.dirC||null,dirI:l.dirI||e.dirI||null,outPresc:l.isOutPresc||e.outPresc,covered:e.covered||!!e.DrugInfo.IsInDoctorSpecialty&&!!e.DrugInfo.InsuranceStatus||null,allowed:e.allowed||!0,maxCovered:e.maxCovered||e.DrugInfo.MaxCount,needBarcode:!!e.DrugInfo.RequiresBarcodeInquiry||!1,needFile:!!e.DrugInfo.NeededToHaveFile,barcodes:e.barcodes||[],notes:[],price:e.DrugInfo.hasOwnProperty("MaxDrugPrice")?{unit:parseFloat(e.DrugInfo.MaxDrugPrice)||0,custUnit:parseFloat(e.DrugInfo.MaxDrugPrice)||0,orgShare:e.covered||e.DrugInfo.IsInDoctorSpecialty&&e.DrugInfo.InsuranceStatus?.7:0,orgTotal:0,total:0,payable:0}:e.price,full:e})))}}class i{constructor({item:e}){this.drugCode=e.genCode,this.SrvQty=e.delCount,this.TimesAday=e.dirC,this.Dose=e.dose,this.Repeat=e.repeat,this.DrugInstId=e.dirP}}const u=(e,t,a={},d="post")=>new Promise(((l,c)=>{let i=JSON.parse(localStorage.getItem("tamin-cred"));i&&Math.round((new Date-new Date(i.created))/36e4)/10<=1.9?(0,r.api)({url:e,method:d,data:t,headers:{...a,token:i.token}}).then((e=>{s.clearLoad(),l(e.data)})).catch((e=>{401===e.response.status&&(localStorage.removeItem("tamin-cred"),s.dlgConf({step:2,title:"Tamin Login",type:"sign"})),s.clearLoad(),c(e)})):n["default"].read("phmgt","insure-cred","party").then((n=>{let d=n.filter((e=>"tamin"===e.party));n.length&&d.length?m(d[0].username,d[0].password).then((()=>{(0,r.api)({url:e,method:"post",data:o["default"].cleanObj(t),headers:{party:"tamin",...a}}).then((e=>{s.clearLoad(),l(e.data)}))})):s.dlgConf({step:2,title:"Tamin Login",type:"sign"}),s.clearLoad(),l(n)})).catch((e=>c(e)))})),m=async(e=null,t=null)=>new Promise((async(a,o)=>{let d={username:e||l.user,password:t||l.pass};(0,r.api)({url:"phmgt/tamin/agent",data:d,method:"post"}).then((e=>{let t={created:new Date,token:e.data.token};s.clearSign(),s.dlgConf({}),localStorage.setItem("tamin-cred",JSON.stringify(t)),n["default"].write("phmgt","insure-cred","party",[{party:"tamin",...d}]),a(e.data)})).catch((e=>{s.notify({type:"w",msg:e.response.data}),o(e)})).finally((()=>{for(let[e,t]of Object.entries(l.load))console.log(e+" "+t),"load"===t&&s.update([[`load.${e}`,null]])}))})),p=async()=>{s.update([["load.ssn","load"]]);let e={natCode:l.ssn};return new Promise((async(t,a)=>{await u("phmgt/tamin/citi",e).then((async e=>{console.log(e.data),localStorage.setItem("tamin-citi",JSON.stringify(e)),s.update([["patFirstname",e.data.firstName],["patLastname",e.data.lastName],['patInfoUI["Have health deserve"]',e.data.hasHealthDeserve]]),await u("phmgt/tamin/getPresc",{Nationalcode:l.ssn},{mode:"list"}).then((e=>{s.update([["prescList",e.resultClass],["searchList",e.resultClass.map((e=>({title:e.doctorFullName,caption:e.docSpec,side:parseInt(e.prescDate.slice(0,4))+"/"+parseInt(e.prescDate.slice(4,6))+"/"+parseInt(e.prescDate.slice(6)),func(){s.update([["samadCode",e.HeadEprscId],["docFirstname",e.doctorFirstName||e.doctorFullName],["docLastname",e.Las||e.doctorLastName],["licence",parseInt(e.docId)]]),g(),s.dlgConf({})}})))],["prescType",e.resultClass&&e.resultClass.length?"online":"paper"]]),s.dlgConf({title:"Prescription List",type:"list",persist:!0})})),t(e)})).catch((e=>a(e)))}))},g=async(e="del")=>{let t="del"===e?{HeadPrescId:l.samadCode}:{HeadId:l.samadCode,ReferReason:""};return new Promise((async(a,r)=>{await u("phmgt/tamin/getPresc",t,{mode:e}).then((t=>{if("del"===e){let e=o["default"].uniqMedCart({...new c(t.resultClass)}.medCart);for(let t of Object.keys(e)){let a=o["default"].MedPriceCalc(e[t].price.custUnit,e[t].maxCovered,e[t].delCount,e[t].price.orgShare);e[t].price.orgTotal=a.covered,e[t].price.total=a.total,e[t].price.payable=a.payable}s.update([["medCart",Object.values(e)],["step",1]])}"online"===l.prescType&&C("eval")})).catch((e=>r(e)))}))},C=async(e=l.prescType)=>new Promise(((t,a)=>{let r=o["default"].timeFormat(),n="online"===e?{ElectronicPrescHead:l.samadCode,drugList:l.medCart.map(((e,t)=>{let a={...e.full.DrugInfo};return a.RequestedCount=e.delCount.toString(),a.PhaDrugPrice=e.price.custUnit.toString(),a})),BarcodesList:l.medCart.map((e=>e.barcodes.map((e=>e.barcode)))).reduce(((e,t)=>t.concat(e))),HashedString:""}:"paper"===e?{NonElectronicPrescHead:{PatientId:l.ssn,DocId:l.licence?l.licence.padStart(10,"0"):"0000000000",PatientMobile:l.patTel,BletSerial:"",PrescDate:r.year+r.month+r.day},NonElectronicPrescDetList:l.medCart.map((e=>new i(e)))}:{nationalCode:l.ssn,HeadId:l.samadCode};u("phmgt/tamin/delPresc",n,{mode:e}).then((e=>{console.log(e)})).catch((e=>{console.log(e),a(e)}))})),h=async(e,t)=>new Promise(((t,a)=>{let r={RequestId:e};u("phmgt/tamin/rmDelPresc",r).then((async e=>{})).catch((e=>{console.log(e),a(e)}))})),I=async({barcode:e,count:t,index:a=l.medCart[l.medIndex].barcodes.length,mode:r="val"})=>{let o="val"===r?{Barcode:{DrugCode:l.medCart[l.medIndex].genCode,Count:t,Identifier:e,HeadId:l.samadCode}}:"reval"===r?{prescriptionId:l.samadCode}:{BarcodeUid:e};return console.log(o),new Promise(((e,t)=>{u("phmgt/tamin/barcode",o,{mode:r}).then((t=>{"val"===r&&s.update([[`barcodeList[${a}].state`,"positive"]]),e(t)})).catch((e=>{"val"===r&&s.update([[`barcodeList[${a}].state`,"negative"]]),t()}))}))},f=async()=>{let{medCount:e,medDirection:t,searchItem:a,dirP:r,dirC:o}=d.Z.state;console.log(phstore.tables.dosage[a.state.shape]),s.update([["medCart",{ordCount:parseFloat(e),delCount:parseFloat(e),srvNN:a.nationalNumber,dirP:r,dirC:o,outPresc:!1,type:"drug",dForm:phstore.tables.dosage[a.state.shape],desc:a.fullName,delTotal:0},"add"],["medDirection",[]],["medCount",null],["searchItem",null]]),s.dlgConf({})},y=()=>{console.log("tamin is linked")},D={getAgent:m,getCiti:p,getPresc:g,delPresc:C,rmDelPresc:h,barcode:I,addMed:f,call:y}}}]);